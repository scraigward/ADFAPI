{
	"name": "APIGET",
	"properties": {
		"activities": [
			{
				"name": "APIGetUsers",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"headers": {
						"x-api-key": "reqres-free-v1"
					},
					"url": {
						"value": "@pipeline().parameters.BaseURL",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "APIGetUsers",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@range(1, 2)\n",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "CopyAPIData",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "['id']"
											},
											"sink": {
												"name": "ID",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['email']"
											},
											"sink": {
												"name": "Email",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['first_name']"
											},
											"sink": {
												"name": "First_Name",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['last_name']"
											},
											"sink": {
												"name": "Last_Name",
												"type": "String"
											}
										}
									],
									"collectionReference": "$['data']",
									"mapComplexValuesToString": true
								}
							},
							"inputs": [
								{
									"referenceName": "RestAPIGetUsers",
									"type": "DatasetReference",
									"parameters": {
										"PageNo": {
											"value": "?page=@{item()}",
											"type": "Expression"
										},
										"BaseURL": "@pipeline().parameters.BaseURL"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "SQLDB",
									"type": "DatasetReference",
									"parameters": {
										"Schema": {
											"value": "@pipeline().parameters.Schema",
											"type": "Expression"
										},
										"Table": {
											"value": "@pipeline().parameters.Table",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "If_CopyFailed",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Set_CopyStatus",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@not(equals(variables('CopyStatus'), 'Succeeded'))\n",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Append variable2",
										"type": "AppendVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "ErrorLog",
											"value": {
												"value": "@concat('Page ', string(item()), ' succeeded.')",
												"type": "Expression"
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Append_ErrorLog",
										"type": "AppendVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "ErrorLog",
											"value": {
												"value": "@concat('Page ', string(item()), ' failed. Error: ', activity('CopyAPIData').error.message)",
												"type": "Expression"
											}
										}
									},
									{
										"name": "SP_LogError",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Append_ErrorLog",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[LogPipelineError]",
											"storedProcedureParameters": {
												"RunId": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "String"
												},
												"PipelineName": {
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"type": "String"
												},
												"PageNumber": {
													"value": {
														"value": "@item()",
														"type": "Expression"
													},
													"type": "Int16"
												},
												"ErrorMessage": {
													"value": {
														"value": "@activity('CopyAPIData').error.message",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "SQLServer",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						},
						{
							"name": "Set_CopyStatus",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "CopyAPIData",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "CopyStatus",
								"value": {
									"value": "@activity('CopyAPIData').status",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"Schema": {
				"type": "string",
				"defaultValue": "dbo"
			},
			"Table": {
				"type": "string",
				"defaultValue": "Users"
			},
			"StartPageNo": {
				"type": "int",
				"defaultValue": 1
			},
			"BaseURL": {
				"type": "string",
				"defaultValue": "https://reqres.in/api/users"
			}
		},
		"variables": {
			"ErrorLog": {
				"type": "Array"
			},
			"CopyStatus": {
				"type": "String"
			}
		},
		"annotations": []
	}
}