{
	"name": "PostUserDataToReqres",
	"properties": {
		"activities": [
			{
				"name": "GetUsersFromSQL",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 1,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SQLDB",
						"type": "DatasetReference",
						"parameters": {
							"Schema": {
								"value": "@pipeline().parameters.Schema",
								"type": "Expression"
							},
							"Table": {
								"value": "@pipeline().parameters.Table",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEachUser",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetUsersFromSQL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetUsersFromSQL').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "PostToReqres",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "00:01:00",
								"retry": 2,
								"retryIntervalInSeconds": 30
							},
							"userProperties": [],
							"typeProperties": {
								"method": "POST",
								"headers": {
									"Content-Type": "application/json",
									"x-api-key": "reqres-free-v1"
								},
								"url": "https://reqres.in/api/users",
								"body": {
									"name": "@concat(item().First_Name, ' ', item().Last_Name)",
									"email": "@item().Email",
									"job": "Data Migration Specialist"
								}
							}
						},
						{
							"name": "Stored procedure1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "PostToReqres",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[LogAPIResponse_SP]",
								"storedProcedureParameters": {
									"ADFHttpStatusCodeInResponse": {
										"value": {
											"value": "@activity('PostToReqres').output.ADFHttpStatusCodeInResponse",
											"type": "Expression"
										},
										"type": "String"
									},
									"ADFWebActivityResponseHeaders": {
										"value": {
											"value": "@activity('PostToReqres').output.ADFWebActivityResponseHeaders",
											"type": "Expression"
										},
										"type": "String"
									},
									"BillingMeterType": {
										"value": {
											"value": "@activity('PostToReqres').output.BillingMeterType",
											"type": "Expression"
										},
										"type": "String"
									},
									"BillingUnit": {
										"value": {
											"value": "@activity('PostToReqres').output.BillingUnit",
											"type": "Expression"
										},
										"type": "String"
									},
									"CreatedAt": {
										"value": {
											"value": "@activity('PostToReqres').output.CreatedAt",
											"type": "Expression"
										},
										"type": "String"
									},
									"EffectiveIntegrationRuntime": {
										"value": {
											"value": "@activity('PostToReqres').output.EffectiveIntegrationRuntime",
											"type": "Expression"
										},
										"type": "String"
									},
									"Email": {
										"value": {
											"value": "@activity('PostToReqres').output.Email",
											"type": "Expression"
										},
										"type": "String"
									},
									"ErrorCode": {
										"value": {
											"value": "@activity('PostToReqres').output.ErrorCode",
											"type": "Expression"
										},
										"type": "String"
									},
									"ErrorMessage": {
										"value": {
											"value": "@activity('PostToReqres').output.ErrorMessage",
											"type": "Expression"
										},
										"type": "String"
									},
									"ExecutionDuration": {
										"value": {
											"value": "@activity('PostToReqres').output.ExecutionDuration",
											"type": "Expression"
										},
										"type": "String"
									},
									"IntegrationRuntimeQueueDuration": {
										"value": {
											"value": "@activity('PostToReqres').output.IntegrationRuntimeQueueDuration",
											"type": "Expression"
										},
										"type": "String"
									},
									"IsSuccess": {
										"value": {
											"value": "@activity('PostToReqres').output.IsSuccess",
											"type": "Expression"
										},
										"type": "String"
									},
									"Job": {
										"value": {
											"value": "@activity('PostToReqres').output.Job",
											"type": "Expression"
										},
										"type": "String"
									},
									"Name": {
										"value": {
											"value": "@activity('PostToReqres').output.Name",
											"type": "Expression"
										},
										"type": "String"
									},
									"RawResponse": {
										"value": {
											"value": "@activity('PostToReqres').output.RawResponse",
											"type": "Expression"
										},
										"type": "String"
									},
									"UserID": {
										"value": {
											"value": "@activity('PostToReqres').output.UserID",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "SQLServer",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"Schema": {
				"type": "string",
				"defaultValue": "dbo"
			},
			"Table": {
				"type": "string",
				"defaultValue": "users"
			}
		},
		"annotations": []
	}
}