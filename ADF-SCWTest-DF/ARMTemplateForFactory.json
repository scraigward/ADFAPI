{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADF-SCWTest-DF"
		},
		"SQLServer_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SQLServer'"
		},
		"RestAPIGetUsers_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@linkedService().BaseURL"
		},
		"SQLServer_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "adf-sql-server-testing.database.windows.net"
		},
		"SQLServer_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "ADF-SQL"
		},
		"SQLServer_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "scw"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/APIGET')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "APIGetUsers",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"x-api-key": "reqres-free-v1"
							},
							"url": {
								"value": "@pipeline().parameters.BaseURL",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "APIGetUsers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1, 2)\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopyAPIData",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "ID",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "[['email']"
													},
													"sink": {
														"name": "Email",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['first_name']"
													},
													"sink": {
														"name": "First_Name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['last_name']"
													},
													"sink": {
														"name": "Last_Name",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "RestAPIGetUsers",
											"type": "DatasetReference",
											"parameters": {
												"PageNo": {
													"value": "?page=@{item()}",
													"type": "Expression"
												},
												"BaseURL": "@pipeline().parameters.BaseURL"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQLDB",
											"type": "DatasetReference",
											"parameters": {
												"Schema": {
													"value": "@pipeline().parameters.Schema",
													"type": "Expression"
												},
												"Table": {
													"value": "@pipeline().parameters.Table",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "If_CopyFailed",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set_CopyStatus",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(equals(variables('CopyStatus'), 'Succeeded'))\n",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Append variable2",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "ErrorLog",
													"value": {
														"value": "@concat('Page ', string(item()), ' succeeded.')",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Append_ErrorLog",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "ErrorLog",
													"value": {
														"value": "@concat('Page ', string(item()), ' failed. Error: ', activity('CopyAPIData').error.message)",
														"type": "Expression"
													}
												}
											},
											{
												"name": "SP_LogError",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Append_ErrorLog",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[LogPipelineError]",
													"storedProcedureParameters": {
														"RunId": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"PageNumber": {
															"value": {
																"value": "@item()",
																"type": "Expression"
															},
															"type": "Int16"
														},
														"ErrorMessage": {
															"value": {
																"value": "@activity('CopyAPIData').error.message",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLServer",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "Set_CopyStatus",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "CopyAPIData",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "CopyStatus",
										"value": {
											"value": "@activity('CopyAPIData').status",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Schema": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"Table": {
						"type": "string",
						"defaultValue": "Users"
					},
					"StartPageNo": {
						"type": "int",
						"defaultValue": 1
					},
					"BaseURL": {
						"type": "string",
						"defaultValue": "https://reqres.in/api/users"
					}
				},
				"variables": {
					"ErrorLog": {
						"type": "Array"
					},
					"CopyStatus": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestAPIGetUsers')]",
				"[concat(variables('factoryId'), '/datasets/SQLDB')]",
				"[concat(variables('factoryId'), '/linkedServices/SQLServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestAPIGetUsers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestAPIGetUsers",
					"type": "LinkedServiceReference",
					"parameters": {
						"BaseURL": {
							"value": "@dataset().BaseURL\n",
							"type": "Expression"
						},
						"PageNo": {
							"value": "?page=1",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"PageNo": {
						"type": "string"
					},
					"BaseURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestAPIGetUsers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLServer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema": {
						"type": "string"
					},
					"Table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestAPIGetUsers')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"BaseURL": {
						"type": "string"
					},
					"PageNo": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestAPIGetUsers_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SQLServer_properties_typeProperties_server')]",
					"database": "[parameters('SQLServer_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('SQLServer_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SQLServer_password')]"
					}
				}
			},
			"dependsOn": []
		}
	]
}